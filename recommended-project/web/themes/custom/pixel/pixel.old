<?php
use Drupal\Core\Menu\MenuLinkInterface;
use Drupal\menu_link_content\Plugin\Menu\MenuLinkContent;
use Drupal\Core\Language\LanguageInterface;
/**
* Implements hook_preprocess_menu().
*/
 function pixel_preprocess_menu(&$variables) {
	$language = Drupal::languageManager()->getCurrentLanguage(LanguageInterface::TYPE_CONTENT)->getId();
	foreach ($variables['items'] as $key => $item) {
	  if(!$variables['items'][$key] = pixel_checkForMenuItemTranslation($item, $language)) {
	    unset($variables['items'][$key]);
	  }
	}
}

function pixel_checkForMenuItemTranslation($item, $language) {
  $menuLinkEntity = pixel_load_link_entity_by_link($item['original_link']);

  if ($menuLinkEntity != NULL) {
    $languages = $menuLinkEntity->getTranslationLanguages();
    // Remove links which is not translated to current language.
    if (!array_key_exists($language, $languages)) {
      return false;
    } else {
      if(count($item['below']) > 0) {
        foreach ($item['below'] as $subkey => $subitem) {
          if(!$item['below'][$subkey] = pixel_checkForMenuItemTranslation($subitem, $language)) {
            unset($item['below'][$subkey]);
          }
        }
      }
      return $item;
    }

  }
}

function pixel_load_link_entity_by_link(MenuLinkInterface $menuLinkContentPlugin) {
  $entity = NULL;
  if ($menuLinkContentPlugin instanceof MenuLinkContent) {
    list($entity_type, $uuid) = explode(':', $menuLinkContentPlugin->getPluginId(), 2);
    // $entity = \Drupal::EntityManager()->loadEntityByUuid($entity_type, $uuid);
    // $entity = \Drupal::entityTypeManager()->getStorage($entity_type, $uuid);
    $entity = \Drupal::service('entity.repository')->loadEntityByUuid($entity_type, $uuid);
  }
  return $entity;
}

function pixel_preprocess(&$variables, $hook) {
  try {
    $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  }
  catch (Exception $e) {
    $variables['is_front'] = FALSE;
  }
  // Ensure the cache varies correctly (new in Drupal 8.3).
  $variables['#cache']['contexts'][] = 'url.path.is_front';
  
  // Pixel Biblioteca Humana
  // 1. Hacer omnipresente el ID cuando lo que se visualiza es un nodo.
  if(\Drupal::request()->attributes->get('node')) {
    $node = \Drupal::request()->attributes->get('node');
    $nid = $node->id();
    $variables['nodeId'] = $nid;
  }
  $variables['curUsuId'] = \Drupal::currentUser()->id();
  
  // 2. Traer valores GET sin cache para poder diferenciar las ventanas de comentarios y mensajes directos.
  if(isset($_GET['uicomments'])) {
    $variables['get']['uicomments'] = $_GET['uicomments'];
  }
  if(isset($_GET['uienlaces'])) {
    $variables['get']['uienlaces'] = $_GET['uienlaces'];
  }
  if(isset($_GET['uimessages'])) {
    $variables['get']['uimessages'] = $_GET['uimessages'];
  }
  if(isset($_GET['tagging'])) {
    $variables['get']['tagging'] = $_GET['tagging'];
  }
  if(isset($_GET['status'])) {
    $variables['get']['status'] = $_GET['status'];
  }
  if(isset($_GET['uidetails'])) {
    $variables['get']['uidetails'] = $_GET['uidetails'];
  }
  $variables['#cache']['contexts'][] = 'url.query_args';
  
}

function pixel_preprocess_comment(&$variables) {
  // Getting the node creation time stamp from the comment object.
  $date = $variables['comment']->getCreatedTime();
  $now = time();
  // Here you can use drupal's format_date() function, or some custom php date formatting.
  $variables['pre_created'] = "";
  if(($now - $date) <= 2592000) {
    $variables['created'] = \Drupal::service('date.formatter')->formatInterval(REQUEST_TIME - $date);
    $variables['pre_created'] = "Hace ";
  }else{
    if (date('Y',$date) === date('Y',$now)) {
        $variables['created'] = \Drupal::service('date.formatter')->format($date, 'custom', 'M j');
    }else{
        $variables['created'] = \Drupal::service('date.formatter')->format($date, 'custom', 'M Y');
    }
  }
}

function pixel_preprocess_node(&$variables) {
  // Getting the node creation time stamp from the comment object.
  $date = $variables['node']->getCreatedTime();
  $now = time();
  // Here you can use drupal's format_date() function, or some custom php date formatting.
  $variables['pre_created'] = "";
  $variables['uid'] = \Drupal::currentUser()->id();
  if(($now - $date) <= 2592000) {
    $variables['created'] = \Drupal::service('date.formatter')->formatInterval(REQUEST_TIME - $date);
    $variables['pre_created'] = "Hace ";
  }else{
    if (date('Y',$date) === date('Y',$now)) {
        $variables['created'] = \Drupal::service('date.formatter')->format($date, 'custom', 'M j');
    }else{
        $variables['created'] = \Drupal::service('date.formatter')->format($date, 'custom', 'M Y');
    }
  }
}